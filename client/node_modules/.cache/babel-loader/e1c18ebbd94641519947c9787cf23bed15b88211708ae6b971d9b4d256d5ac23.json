{"ast":null,"code":"'use strict';\n\nvar isPossiblePrototype = require('../internals/is-possible-prototype');\nvar $String = String;\nvar $TypeError = TypeError;\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};","map":{"version":3,"names":["isPossiblePrototype","require","$String","String","$TypeError","TypeError","module","exports","argument"],"sources":["C:/Users/ernes/OneDrive/Documents/COMPX241 Labs/COMPX241 - Blowing in the wind/BlowingInTheWind/client/node_modules/core-js-pure/internals/a-possible-prototype.js"],"sourcesContent":["'use strict';\r\nvar isPossiblePrototype = require('../internals/is-possible-prototype');\r\n\r\nvar $String = String;\r\nvar $TypeError = TypeError;\r\n\r\nmodule.exports = function (argument) {\r\n  if (isPossiblePrototype(argument)) return argument;\r\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,oCAAoC,CAAC;AAEvE,IAAIC,OAAO,GAAGC,MAAM;AACpB,IAAIC,UAAU,GAAGC,SAAS;AAE1BC,MAAM,CAACC,OAAO,GAAG,UAAUC,QAAQ,EAAE;EACnC,IAAIR,mBAAmB,CAACQ,QAAQ,CAAC,EAAE,OAAOA,QAAQ;EAClD,MAAM,IAAIJ,UAAU,CAAC,YAAY,GAAGF,OAAO,CAACM,QAAQ,CAAC,GAAG,iBAAiB,CAAC;AAC5E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}