{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({\n  target: 'Array',\n  proto: true,\n  arity: 1,\n  forced: FORCED\n}, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        doesNotExceedSafeInteger(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger(n + 1);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});","map":{"version":3,"names":["$","require","fails","isArray","isObject","toObject","lengthOfArrayLike","doesNotExceedSafeInteger","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","isConcatSpreadable","O","spreadable","undefined","FORCED","target","proto","arity","forced","arg","A","n","i","k","length","len","E","arguments"],"sources":["C:/Users/ernes/OneDrive/Documents/COMPX241 Labs/COMPX241 - Blowing in the wind/BlowingInTheWind/client/node_modules/core-js-pure/modules/es.array.concat.js"],"sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar fails = require('../internals/fails');\r\nvar isArray = require('../internals/is-array');\r\nvar isObject = require('../internals/is-object');\r\nvar toObject = require('../internals/to-object');\r\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\r\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\r\nvar createProperty = require('../internals/create-property');\r\nvar arraySpeciesCreate = require('../internals/array-species-create');\r\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\r\nvar wellKnownSymbol = require('../internals/well-known-symbol');\r\nvar V8_VERSION = require('../internals/engine-v8-version');\r\n\r\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\r\n\r\n// We can't use this feature detection in V8 since it causes\r\n// deoptimization and serious performance degradation\r\n// https://github.com/zloirock/core-js/issues/679\r\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\r\n  var array = [];\r\n  array[IS_CONCAT_SPREADABLE] = false;\r\n  return array.concat()[0] !== array;\r\n});\r\n\r\nvar isConcatSpreadable = function (O) {\r\n  if (!isObject(O)) return false;\r\n  var spreadable = O[IS_CONCAT_SPREADABLE];\r\n  return spreadable !== undefined ? !!spreadable : isArray(O);\r\n};\r\n\r\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');\r\n\r\n// `Array.prototype.concat` method\r\n// https://tc39.es/ecma262/#sec-array.prototype.concat\r\n// with adding support of @@isConcatSpreadable and @@species\r\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\r\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\r\n  concat: function concat(arg) {\r\n    var O = toObject(this);\r\n    var A = arraySpeciesCreate(O, 0);\r\n    var n = 0;\r\n    var i, k, length, len, E;\r\n    for (i = -1, length = arguments.length; i < length; i++) {\r\n      E = i === -1 ? O : arguments[i];\r\n      if (isConcatSpreadable(E)) {\r\n        len = lengthOfArrayLike(E);\r\n        doesNotExceedSafeInteger(n + len);\r\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\r\n      } else {\r\n        doesNotExceedSafeInteger(n + 1);\r\n        createProperty(A, n++, E);\r\n      }\r\n    }\r\n    A.length = n;\r\n    return A;\r\n  }\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}