{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnown` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({\n  target: 'Symbol',\n  stat: true,\n  name: 'isWellKnownSymbol',\n  forced: true\n}, {\n  isWellKnown: isWellKnownSymbol\n});","map":{"version":3,"names":["$","require","isWellKnownSymbol","target","stat","name","forced","isWellKnown"],"sources":["C:/Users/ernes/OneDrive/Documents/COMPX241 Labs/COMPX241 - Blowing in the wind/BlowingInTheWind/client/node_modules/core-js-pure/modules/esnext.symbol.is-well-known.js"],"sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\r\n\r\n// `Symbol.isWellKnown` method\r\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\r\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\r\n$({ target: 'Symbol', stat: true, name: 'isWellKnownSymbol', forced: true }, {\r\n  isWellKnown: isWellKnownSymbol\r\n});\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,mCAAmC,CAAC;;AAEpE;AACA;AACA;AACAD,CAAC,CAAC;EAAEG,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,mBAAmB;EAAEC,MAAM,EAAE;AAAK,CAAC,EAAE;EAC3EC,WAAW,EAAEL;AACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}